.PHONY: build run test create-deploy redeploy k8s-shell console watch
.PHONY: push pull config-gen abort-on-uncommited-changes copy-mix.lock

SEMAPHORE_EXECUTABLE_UUID?=""
GIT_HASH=$(shell git log --format=format:'%h' -1)
TAG?=$(GIT_HASH)-$(SEMAPHORE_EXECUTABLE_UUID)
REPO=renderedtext/<%= prj %>
IMAGE=$(REPO):$(TAG)
IMAGE_LATEST=$(REPO):latest

INTERACTIVE_SESSION=\
          -v $$PWD/home_dir:/home/developer \
          -v $$PWD:/home/developer/prj \
          -e HOME=/home/developer/ \
          --user developer \
          --rm \
          --workdir="/home/developer/prj" \
          -p 4000:4000 \
          -it renderedtext/elixir:latest


console:
	docker run $(INTERACTIVE_SESSION)  /bin/bash

build:
	docker build --cache-from $(IMAGE_LATEST) -t $(IMAGE) .
	docker tag $(IMAGE) $(IMAGE_LATEST)
	$(eval size=$(shell wc -c <mix.lock ))
	if [ $(size) -lt 5 ]; then $(MAKE) copy-mix.lock build; fi

run: build
	docker run -p 4000:4000 -it $(IMAGE)

test: build config-gen
	docker-compose up

create-deploy: abort-on-uncommited-changes push config-gen
	kubectl create -f deploy.yml
	kubectl get svc/<%= prj_dash %>

redeploy: abort-on-uncommited-changes push config-gen
	kubectl apply -f deploy.yml
	kubectl get svc/<%= prj_dash %>

k8s-shell:
	$(eval pod_name=$(shell kubectl get po -l app=cluster-portal -o jsonpath={.items[*].metadata.name}))
	kubectl exec -it $(pod_name) -- /bin/bash

watch:
	docker run $(INTERACTIVE_SESSION)  mix test.watch

push: build
	docker push $(IMAGE)
	docker push $(IMAGE_LATEST)

pull:
	docker pull $(IMAGE)
	docker pull $(IMAGE_LATEST)

config-gen:
	mix usvc.cfg_gen $(TAG)

abort-on-uncommited-changes:
	git diff-index --quiet HEAD --

copy-mix.lock:
	$(eval cid=$(shell docker create $(IMAGE)))
	echo $(cid)
	docker cp $(cid):/home/developer/prj/mix.lock ./mix.lock
	docker rm -v $(cid)
